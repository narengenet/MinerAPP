// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinerAPP.Infrastructure.Contexts;

#nullable disable

namespace MinerAPP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MinerAPP.Core.Domain.StaticDictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TheName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StaticDictionaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb2136e7-aa62-458a-8315-a34134c9ffd9"),
                            IsDeleted = false,
                            TheName = "theqr",
                            TheValue = "https://localhost:7249/images/sina.jpg"
                        },
                        new
                        {
                            Id = new Guid("ad1e5744-b267-420b-b680-c19bad74ef30"),
                            IsDeleted = false,
                            TheName = "thewallet",
                            TheValue = "TJ1000000000000000000000000000000"
                        },
                        new
                        {
                            Id = new Guid("4256d06b-8fce-4dd7-992d-5fe129ea2478"),
                            IsDeleted = false,
                            TheName = "inviterreward",
                            TheValue = "0.1"
                        },
                        new
                        {
                            Id = new Guid("0b46cd67-d90c-4942-bb2c-49c65fcb8ccd"),
                            IsDeleted = false,
                            TheName = "deposithelp",
                            TheValue = "Deposit Helpppppppppppppppppp"
                        },
                        new
                        {
                            Id = new Guid("cdecaac4-fc52-43ff-a64b-b9ce2ca7778f"),
                            IsDeleted = false,
                            TheName = "withdrawhelp",
                            TheValue = "Withdraw Helpppppppppppppppppp"
                        },
                        new
                        {
                            Id = new Guid("e487d40b-3ccd-48d8-af00-eafbbf30060a"),
                            IsDeleted = false,
                            TheName = "transactionhelp",
                            TheValue = "Transaction Helpppppppppppppppppp"
                        },
                        new
                        {
                            Id = new Guid("2cccba59-d810-4851-980f-fb11fed326b2"),
                            IsDeleted = false,
                            TheName = "accounthelp",
                            TheValue = "Account Helpppppppppppppppppp"
                        });
                });

            modelBuilder.Entity("MinerAPP.Core.Domain.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeposit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TheHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheWallet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MinerAPP.Core.Domain.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Inviter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileMediaURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WalletAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("84020544-b6ce-4c4f-9a4f-d583484ba67e"),
                            Balance = 0.0,
                            Cellphone = "00989394125130",
                            Email = "sarparast_r@yahoo.com",
                            Family = "Jouybari",
                            IsActivated = false,
                            IsDeleted = false,
                            Name = "Sina",
                            ProfileMediaURL = "uploads/2022/9/sina2.jpg",
                            Username = "sinful",
                            WalletAddress = "TJ12333333333333323333333333333333"
                        });
                });

            modelBuilder.Entity("MinerAPP.Core.Domain.UsersLogins", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeviceModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMEI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsersLogins");
                });
#pragma warning restore 612, 618
        }
    }
}
